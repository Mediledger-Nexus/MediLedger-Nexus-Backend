services:
  # Main FastAPI Backend Service
  - type: web
    name: mediledger-nexus-api
    env: python
    plan: starter
    buildCommand: |
      cd backend && \
      python -m pip install --upgrade pip && \
      pip install -r requirements.txt && \
      pip install -e .
    startCommand: |
      cd backend && \
      uvicorn src.mediledger_nexus.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: LOG_LEVEL
        value: INFO
      - key: HOST
        value: 0.0.0.0
      - key: PORT
        fromService:
          type: web
          name: mediledger-nexus-api
          property: port
      - key: DATABASE_URL
        fromDatabase:
          name: mediledger-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: HEDERA_NETWORK
        value: testnet
      - key: HEDERA_ACCOUNT_ID
        sync: false
      - key: HEDERA_PRIVATE_KEY
        sync: false
      - key: GROQ_API_KEY
        sync: false
      - key: CORS_ORIGINS
        value: https://mediledgernexus.com,https://www.mediledgernexus.com
      - key: CORS_CREDENTIALS
        value: true
      - key: CORS_METHODS
        value: GET,POST,PUT,DELETE,OPTIONS
      - key: CORS_HEADERS
        value: "*"
    healthCheckPath: /health
    autoDeploy: true
    branch: main
    rootDir: backend

  # Redis Cache Service
  - type: redis
    name: mediledger-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru

  # PostgreSQL Database
  - type: pserv
    name: mediledger-db
    env: postgresql
    plan: starter
    region: oregon
    ipAllowList: []
    disk:
      name: mediledger-db-disk
      mountPath: /var/lib/postgresql/data
      sizeGB: 10

  # Celery Worker Service
  - type: worker
    name: mediledger-worker
    env: python
    plan: starter
    buildCommand: |
      cd backend && \
      python -m pip install --upgrade pip && \
      pip install -r requirements.txt && \
      pip install -e .
    startCommand: |
      cd backend && \
      celery -A src.mediledger_nexus.core.celery worker --loglevel=info
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: mediledger-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: mediledger-redis
          property: connectionString
      - key: SECRET_KEY
        fromService:
          type: web
          name: mediledger-nexus-api
          envVarKey: SECRET_KEY
      - key: ENCRYPTION_KEY
        fromService:
          type: web
          name: mediledger-nexus-api
          envVarKey: ENCRYPTION_KEY
      - key: HEDERA_NETWORK
        value: testnet
      - key: HEDERA_ACCOUNT_ID
        sync: false
      - key: HEDERA_PRIVATE_KEY
        sync: false
      - key: GROQ_API_KEY
        sync: false
    rootDir: backend

  # Celery Beat Scheduler
  - type: worker
    name: mediledger-scheduler
    env: python
    plan: starter
    buildCommand: |
      cd backend && \
      python -m pip install --upgrade pip && \
      pip install -r requirements.txt && \
      pip install -e .
    startCommand: |
      cd backend && \
      celery -A src.mediledger_nexus.core.celery beat --loglevel=info
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: mediledger-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: mediledger-redis
          property: connectionString
      - key: SECRET_KEY
        fromService:
          type: web
          name: mediledger-nexus-api
          envVarKey: SECRET_KEY
    rootDir: backend

databases:
  - name: mediledger-db
    databaseName: mediledger_nexus
    user: mediledger_user
    plan: starter

# Static Site (if frontend is added later)
# staticSites:
#   - name: mediledger-frontend
#     buildCommand: |
#       npm install
#       npm run build
#     staticPublishPath: ./dist
#     envVars:
#       - key: VITE_API_URL
#         fromService:
#           type: web
#           name: mediledger-nexus-api
#           envVarKey: RENDER_EXTERNAL_URL
#     routes:
#       - type: rewrite
#         source: /*
#         destination: /index.html
